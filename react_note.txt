Supose there is a frontend screen in react, it is a form , first field is dropdown which is ACTION (Create,Amend) , 2nd. From Accunt ,3.Sweep Day , 4. To Account , 5.Resultant Balance , 6. drop down which is STATUS(Active / Inactive) .... there is a button Transmit ,, after filling details .. i will hit transmit ..give me the react code.. and give me springboot code how it will handle in backend..just receive the data and put it in a table .... table field is INST_NO(3) , FROM_ACCT _NO(10) ,SWEEP_DAY(1), TO_ACCT_NO(10) , RESULTANT_BAL(17) , SWEEP_STATUS(1)


/project-root
│
├── /frontend                # React frontend application
│   ├── /public
│   │   └── index.html       # Entry point for React
│   ├── /src
│   │   ├── /components      # React components (e.g., FormComponent.js)
│   │   ├── /services        # Axios or fetch API service files
│   │   ├── App.js           # Main app component
│   │   ├── index.js         # React entry point
│   │   └── styles.css       # Global styles
│   ├── .gitignore
│   ├── package.json         # NPM dependencies and scripts
│   └── README.md            # Project documentation
│
├── /backend                 # Spring Boot backend application
│   ├── /src
│   │   ├── /main
│   │   │   ├── /java
│   │   │   │   └── /com
│   │   │   │       └── /example
│   │   │   │           └── /demo
│   │   │   │               ├── DemoApplication.java         # Main Spring Boot application
│   │   │   │               ├── /controller                 # REST controllers
│   │   │   │               │   └── FormDataController.java  # Handles HTTP requests
│   │   │   │               ├── /model                      # Entity classes
│   │   │   │               │   └── FormData.java            # Entity mapping to table
│   │   │   │               └── /repository                 # JPA repositories
│   │   │   │                   └── FormDataRepository.java    # Data access layer
│   │   │   └── /resources
│   │   │       ├── application.properties  # Database and app configuration
│   │   │       └── static                   # Static resources (if any)
│   │   ├── .gitignore
│   │   ├── pom.xml                      # Maven dependencies and build configuration
│   │   └── README.md                   # Project documentation
│   ├── /target                         # Compiled .class files and JARs (generated by build)
│   └── /build                           # Build directory (if using Gradle)
│
└── README.md                          # Project-level documentation



there are few validations which we want to check on frontend level ...
1.all the fields are mandatory ..if any one field is empty including dropdowns ..alert box should occur while transmiting (All fields are mandatory)
2.digits in accounts should be 10 digits in from account or to account...else throw alert ..invalid account no
3.resultant balance should not contain decimals and should be less than 17 digits ..else throw alert ....Resultant balance is integer and length is less than 17 
4.while action is create .. status field shoud be locked and should be filled with inactive ...it cannot be active during create

now the thing is when we select action as amend .. button (Fetch appears) on putting from_account_no and clicing fetch button all the fields in the form should get filled with the existing record of the from account from SMDT table...if the record is not present in smdt throw alert REcord not found.. and also if we dont put from_account_no and click fetch alert messsage should come ...please fill from_accout_no...create seprate react file for this because code will be tooo long now


now when we fetch ..we are basically fetching so that we can amend ... once we fetch we can change .. sweep day , resultant balance ..after updating and hitting transmit the data should be updated in smdt 

now ...if i fetch and the form will get filled with the existing record in smdt ..and now the change is ...if i chooose status inactive and hit transmit ..entry from smdt of that from-account_no should be transmit to smdh (same smdt stucture) and entry should be delete from the smdt table ..

one more validation while create if the record already exist  with that FROM_ACCOUNT_NO alert msg (sweep record already exist)

now since smdh is a history table ..multiple entries of the same FROM_ACCOUNT can be present ..so it will give error because primary key is from_account ..so we need to add one key RECORD_KEY ...if while moving entry from smdt to smdh ...entry of the from_account is present then rec_no should get incremented by 1 ,,, if there is no entry of the FROM_ACCOUNT no then rec_no should be 1 ...rec_no is also primary key ...this way we can avoid multiple primarykey error